# INSTRUCTION CONSTANTS
LOAD = "LW"
STORE = "SW"
LOAD_DOUBLE = "L.D"
STORE_DOUBLE = "S.D"
ADD_SIGNED = "DADD"
ADD_IMMEDIATE_SIGNED = "DADDI"
ADD_DOUBLE = "ADD.D"
SUBTRACT_SIGNED = "DSUB"
SUBTRACT_IMMEDIATE_SIGNED = "DSUBI"
SUBTRACT_DOUBLE = "SUB.D"
MULTIPLY_DOUBLE = "MUL.D"
DIVIDE_DOUBLE = "DIV.D"
AND_BITWISE = "AND"
AND_BITWISE_IMMEDIATE = "ANDI"
OR_BITWISE = "OR"
OR_BITWISE_IMMEDIATE = "ORI"
UNCONDITIONAL_JUMP = "J"
BRANCH_EQUAL = "BEQ"
BRANCH_NOT_EQUAL = "BNE"
HALT = "HLT"

# INSTRUCTION TYPES
DATA_TRANSFER = [LOAD, STORE, LOAD_DOUBLE, STORE_DOUBLE]
ARITHMETIC_LOGICAL = [ADD_SIGNED, ADD_IMMEDIATE_SIGNED, ADD_DOUBLE, SUBTRACT_SIGNED, SUBTRACT_IMMEDIATE_SIGNED, SUBTRACT_DOUBLE, MULTIPLY_DOUBLE, DIVIDE_DOUBLE, AND_BITWISE, AND_BITWISE_IMMEDIATE, OR_BITWISE, OR_BITWISE_IMMEDIATE]
CONTROL = [UNCONDITIONAL_JUMP, BRANCH_EQUAL, BRANCH_NOT_EQUAL]
SPECIAL = [HALT]

# Pipeline Stages
IF = 1
ID = 2
EX = 3
WB = 4
FINISHED = 5

# FUNCTIONAL UNIT CONSTANTS
FP_ADDER = "FP ADDER"
FP_MULTIPLIER = "FP MULTIPLIER"
FP_DIVIDER = "FP DIVIDER"
MAIN_MEMORY = "MAIN MEMORY"
INSTRUCTION_CACHE = "I-CACHE"
DATA_CACHE = "D-CACHE"
INT_AL = "INT AL"
INT_MEMACCESS = "INT MEMACCESS"
FP_MEMACCESS = "FP MEMACCESS"
